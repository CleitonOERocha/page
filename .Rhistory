"MRVE3","MULT3", "MYPK3", "ODPV3", "OMGE3",
"PARD3", "POMO4","POSI3", "PRIO3", "QUAL3",
"RAPT4", "RLOG3", "SAPR11", "SAPR4","SEER3",
"SIMH3","SLCE3","SMLS3", "SMTO3", "SQIA3",
"STBP3", "TAEE11","TASA4","TCSA3","TEND3","TGMA3",
"TIET11","TRIS3", "TUPY3", "USIM5", "VIVA3","VLID3",
"VULC3", "WIZS3","YDUQ3"
))
ibovespa <- data.frame(acao = c("VALE3", "ITUB4","B3SA3","PETR4", "BBDC4", "PETR3","ABEV3",
"BBAS3","MGLU3", "ITSA4", "WEGE3", "JBSS3", "LREN3", "GNDI3",
"NTCO3", "SUZB3", "RENT3", "BBDC3", "EQTL3", "RADL3", "RAIL3",
"VVAR3", "LAME4", "BTOW3", "UGPA3","VIVT4", "SBSP3", "BBSE3",
"CCRO3", "BRFS3", "GGBR4", "BRDT3","BPAC11", "KLBN11","HAPV3",
"HYPE3", "SULA11", "COGN3","ENGI11", "TIMP3", "ELET3", "CSAN3",
"PCAR3", "EGIE3","CMIG4", "SANB11", "YDUQ3", "TOTS3", "BRML3",
"IRBR3", "ELET6", "QUAL3","BRAP4", "CRFB3", "FLRY3","CSNA3",
"CYRE3", "AZUL4", "BRKM5", "TAEE11", "EMBR3","MULT3","MRVE3",
"CIEL3", "ENBR3", "CPFE3", "MRFG3", "GOAU4", "USIM5", "BEEF3",
"IGTA3", "CVCB3", "GOLL4","ECOR3", "HGTX3"
))
anti_join(small_caps, ibovespa, by ="acao")
dif_small <- anti_join(small_caps, ibovespa, by ="acao")
View(dif_small)
paste0("""",dif_small$acao,"""")
paste0("  ",dif_small$acao,"""")
paste0("  ",dif_small$acao," " )
paste0("\"",dif_small$acao," " )
paste0("",dif_small$acao," " )
paste0("",dif_small$acao,"","," )
paste0("",dif_small$acao,"")
bovespa <- c("VALE3", "ITUB4","B3SA3","PETR4", "BBDC4", "PETR3","ABEV3",
"BBAS3","MGLU3", "ITSA4", "WEGE3", "JBSS3", "LREN3", "GNDI3",
"NTCO3", "SUZB3", "RENT3", "BBDC3", "EQTL3", "RADL3", "RAIL3",
"VVAR3", "LAME4", "BTOW3", "UGPA3","VIVT4", "SBSP3", "BBSE3",
"CCRO3", "BRFS3", "GGBR4", "BRDT3","BPAC11", "KLBN11","HAPV3",
"HYPE3", "SULA11", "COGN3","ENGI11", "TIMP3", "ELET3", "CSAN3",
"PCAR3", "EGIE3","CMIG4", "SANB11", "YDUQ3", "TOTS3", "BRML3",
"IRBR3", "ELET6", "QUAL3","BRAP4", "CRFB3", "FLRY3","CSNA3",
"CYRE3", "AZUL4", "BRKM5", "TAEE11", "EMBR3","MULT3","MRVE3",
"CIEL3", "ENBR3", "CPFE3", "MRFG3", "GOAU4", "USIM5", "BEEF3",
"IGTA3", "CVCB3", "GOLL4","ECOR3", "HGTX3","AALR3","ABCB4","ALSO3",
"ALUP11","AMAR3","ANIM3", "ARZZ3","BIDI11","BIDI4", "BKBR3","BMGB4",
"BPAN4","BRPR3", "BRSR6","CAML3","CEAB3","CESP6","CNTO3","CSMG3",
"DIRR3","DMMO3","DTEX3","ENAT3","ENEV3","EVEN3","EZTC3","GFSA3",
"GRND3","GUAR3", "HBOR3", "JHSF3","LCAM3","LEVE3","LIGT3","LINX3",
"LOGG3","LOGN3","LPSB3","LWSA3", "MDIA3","MEAL3","MILS3", "MOVI3",
"MYPK3","ODPV3","OMGE3","PARD3","POMO4","POSI3","PRIO3","RAPT4","RLOG3" ,
"SAPR11","SAPR4","SEER3", "SIMH3","SLCE3","SMLS3","SMTO3","SQIA3",
"STBP3","TASA4","TCSA3","TEND3","TGMA3","TIET11","TRIS3","TUPY3",
"VIVA3", "VLID3","VULC3","WIZS3"
)
indicadores_fundamentalistas <- do.call(rbind.data.frame,lapply(bovespa, indicadores_acao))
View(indicadores_fundamentalistas)
str(indicadores_fundamentalistas)
as.numeric(indicadores_fundamentalistas$`P/L`)
indicadores_fundamentalistas[indicadores_fundamentalistas == "-"] <- NA
View(indicadores_fundamentalistas)
as.numeric(indicadores_fundamentalistas$`P/L`)
indicadores_fundamentalistas %>% mutate(`P/L` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `P/L`)))))
str(indicadores_fundamentalistas)
indicadores_fundamentalistas %>% mutate(`P/L` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `P/L`)))),
VPA = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", VPA)))),
`P_Cap.Giro` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `P_Cap.Giro`)))),
`Div.Bruta_Patrimonio` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `Div.Bruta_Patrimonio`)))),
`EV_EBIT` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `EV_EBIT`)))),
`EV_EBITDA` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `EV_EBITDA`)))),
`Giro.Ativos` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `Giro.Ativos`)))),
`Liquidez.Corrente` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `Liquidez.Corrente`)))),
`LPA` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `LPA`)))),
`P/Ativos` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `P/Ativos`)))),
`P/EBIT` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `P/EBIT`)))),
`P/VP` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `P/VP`)))),
`P_Ativo.Circ.Liq` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `P_Ativo.Circ.Liq`)))),
`P_Cap.Giro` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `P_Cap.Giro`)))),
`PSR` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `PSR`))))
)
indicadores_fundamentalistas <- indicadores_fundamentalistas %>% mutate(`P/L` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `P/L`)))),
VPA = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", VPA)))),
`P_Cap.Giro` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `P_Cap.Giro`)))),
`Div.Bruta_Patrimonio` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `Div.Bruta_Patrimonio`)))),
`EV_EBIT` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `EV_EBIT`)))),
`EV_EBITDA` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `EV_EBITDA`)))),
`Giro.Ativos` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `Giro.Ativos`)))),
`Liquidez.Corrente` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `Liquidez.Corrente`)))),
`LPA` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `LPA`)))),
`P/Ativos` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `P/Ativos`)))),
`P/EBIT` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `P/EBIT`)))),
`P/VP` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `P/VP`)))),
`P_Ativo.Circ.Liq` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `P_Ativo.Circ.Liq`)))),
`P_Cap.Giro` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `P_Cap.Giro`)))),
`PSR` = as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", `PSR`))))
)
str(indicadores_fundamentalistas)
ifelse(indicadores_fundamentalistas$`P/L`*indicadores_fundamentalistas$`P/VP` >= 22.5, 0,1)
indicadores_fundamentalistas$descontadas <- ifelse(indicadores_fundamentalistas$`P/L`*indicadores_fundamentalistas$`P/VP` >= 22.5, 0,1)
empresas_descontadas <- indicadores_fundamentalistas %>% filter(descontadas == 1)
View(empresas_descontadas)
indicadores_fundamentalistas$descontadas <- ifelse(indicadores_fundamentalistas$`P/L`*indicadores_fundamentalistas$`P/VP` <= 22.5 &
indicadores_fundamentalistas$`P/L`*indicadores_fundamentalistas$`P/VP` > 0, 1, 0)
empresas_descontadas <- indicadores_fundamentalistas %>% filter(descontadas == 1)
View(empresas_descontadas)
gsub("%", "", indicadores_fundamentalistas$ROE)
lapply(indicadores_fundamentalistas$ROE, gsub("%", ""))
sapply(indicadores_fundamentalistas$ROE,function(x) gsub("%","",as.character(x)))
sapply(indicadores_fundamentalistas,function(x) gsub("%","",as.character(x)))
indicadores_fundamentalistas <- sapply(indicadores_fundamentalistas,function(x) gsub("%","",as.character(x)))
str(indicadores_fundamentalistas)
library(tidyverse)
library(ralger)
indicadores_acao <- function(cod_acao){
# obtendo tabela com dados fundamentalistas
dados_fundamentus <- table_scrap(paste0("https://www.fundamentus.com.br/detalhes.php?papel=",cod_acao),choose = 3)
# retirando colunas não necessárias, que tratam de oscilações do preço da ação
dados_fundamentus <- dados_fundamentus[,-c(1,2)]
# criando um dataframe novo com os dados organizados por indicadores e valores
dados_fundamentus2 <- data.frame(indicadores_fund = c(dados_fundamentus[,"Indicadores fundamentalistas"],
dados_fundamentus[,"Indicadores fundamentalistas.2"]),
valores = c(dados_fundamentus[,"Indicadores fundamentalistas.1"],
dados_fundamentus[,"Indicadores fundamentalistas.3"]))
# retirando "?" no começo de cada termo
dados_fundamentus2$indicadores_fund <- sub("^.", "", dados_fundamentus2$indicadores_fund)
# renomeando algumas colunas
dados_fundamentus2$indicadores_fund <- recode(dados_fundamentus2$indicadores_fund,
`Cres. Rec (5a)`= "Cres.Rec.Ultimos.5anos",
`EV / EBIT` = "EV_EBIT",
`Marg. EBIT` = "Marg.EBIT",
`Div. Yield` = "Div.Yield",
`Marg. Líquida` = "Marg.Liquida",
`Liquidez Corr` = "Liquidez.Corrente",
`EBIT / Ativo` = "EBIT_Ativo",
`Div Br/ Patrim` = "Div.Bruta_Patrimonio",
`P/Cap. Giro` = "P_Cap.Giro",
`Marg. Bruta` = "Margem.Bruta",
`Giro Ativos` = "Giro.Ativos",
`P/Ativ Circ Liq` = "P_Ativo.Circ.Liq",
`EV / EBITDA` = "EV_EBITDA")
# criando coluna com nome da ação e alterando a estrutura do banco de dados
dados_fundamentus2 <- dados_fundamentus2 %>%
mutate(Acao = cod_acao) %>%
spread(key = indicadores_fund, value = valores)
#dados_fundamentus2 <- dados_fundamentus2 %>% spread(key = indicadores_fund, value = valores)
return(dados_fundamentus2)
}
# vetor com ações listadas no ibovespa e no indice small caps
bovespa <- c("VALE3", "ITUB4","B3SA3","PETR4", "BBDC4", "PETR3","ABEV3",
"BBAS3","MGLU3", "ITSA4", "WEGE3", "JBSS3", "LREN3", "GNDI3",
"NTCO3", "SUZB3", "RENT3", "BBDC3", "EQTL3", "RADL3", "RAIL3",
"VVAR3", "LAME4", "BTOW3", "UGPA3","VIVT4", "SBSP3", "BBSE3",
"CCRO3", "BRFS3", "GGBR4", "BRDT3","BPAC11", "KLBN11","HAPV3",
"HYPE3", "SULA11", "COGN3","ENGI11", "TIMP3", "ELET3", "CSAN3",
"PCAR3", "EGIE3","CMIG4", "SANB11", "YDUQ3", "TOTS3", "BRML3",
"IRBR3", "ELET6", "QUAL3","BRAP4", "CRFB3", "FLRY3","CSNA3",
"CYRE3", "AZUL4", "BRKM5", "TAEE11", "EMBR3","MULT3","MRVE3",
"CIEL3", "ENBR3", "CPFE3", "MRFG3", "GOAU4", "USIM5", "BEEF3",
"IGTA3", "CVCB3", "GOLL4","ECOR3", "HGTX3","AALR3","ABCB4","ALSO3",
"ALUP11","AMAR3","ANIM3", "ARZZ3","BIDI11","BIDI4", "BKBR3","BMGB4",
"BPAN4","BRPR3", "BRSR6","CAML3","CEAB3","CESP6","CNTO3","CSMG3",
"DIRR3","DMMO3","DTEX3","ENAT3","ENEV3","EVEN3","EZTC3","GFSA3",
"GRND3","GUAR3", "HBOR3", "JHSF3","LCAM3","LEVE3","LIGT3","LINX3",
"LOGG3","LOGN3","LPSB3","LWSA3", "MDIA3","MEAL3","MILS3", "MOVI3",
"MYPK3","ODPV3","OMGE3","PARD3","POMO4","POSI3","PRIO3","RAPT4","RLOG3" ,
"SAPR11","SAPR4","SEER3", "SIMH3","SLCE3","SMLS3","SMTO3","SQIA3",
"STBP3","TASA4","TCSA3","TEND3","TGMA3","TIET11","TRIS3","TUPY3",
"VIVA3", "VLID3","VULC3","WIZS3"
)
# aplicando loop para obter os indicadores das ações armazenados em um só dataframe
indicadores_fundamentalistas <- do.call(rbind.data.frame,lapply(bovespa, indicadores_acao))
# Transformando "-" em NA
indicadores_fundamentalistas[indicadores_fundamentalistas == "-"] <- NA
indicadores_fundamentalistas2 <- sapply(indicadores_fundamentalistas,function(x) gsub("%",""))
indicadores_fundamentalistas2 <- sapply(indicadores_fundamentalistas,function(x) gsub("%","", as.data.frame(x)))
indicadores_fundamentalistas2 <- sapply(indicadores_fundamentalistas,function(x) gsub("%","", as.character(x)))
indicadores_fundamentalistas2 <- as.data.frame(sapply(indicadores_fundamentalistas,function(x) gsub("%","", as.character(x))))
View(indicadores_fundamentalistas2)
str(indicadores_fundamentalistas2)
indicadores_fundamentalistas2 %>% as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", indicadores_fundamentalistas2[,-1]))))
indicadores_fundamentalistas2[,-1]
as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", indicadores_fundamentalistas2[,-1]))))
as.data.frame(sapply(indicadores_fundamentalistas2[,-1],function(x) as.numeric(as.numeric(gsub(",", ".", gsub("\\.", ""))))))
as.data.frame(sapply(indicadores_fundamentalistas2[,-1],function(x) as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", as.numeric(x)))))))
as.data.frame(sapply(indicadores_fundamentalistas2[,-1],function(x) as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", as.character(x)))))))
indicadores_fundamentalistas2 <- as.data.frame(sapply(indicadores_fundamentalistas2[,-1],function(x) as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", as.character(x)))))))
str(indicadores_fundamentalistas2)
# retirando "%"
indicadores_fundamentalistas <- as.data.frame(sapply(indicadores_fundamentalistas,function(x) gsub("%","", as.character(x))))
# convertendo colunas em númericas
indicadores_fundamentalistas <- as.data.frame(sapply(indicadores_fundamentalistas[,-1],function(x) as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "", as.character(x)))))))
# procurando empresas cuja multiplicação do P/L pelo P/VP seja menor que 22,5
indicadores_fundamentalistas$descontadas <- ifelse(indicadores_fundamentalistas$`P/L`*indicadores_fundamentalistas$`P/VP` <= 22.5 &
indicadores_fundamentalistas$`P/L`*indicadores_fundamentalistas$`P/VP` > 0, 1, 0)
empresas_descontadas <- indicadores_fundamentalistas %>% filter(descontadas == 1)
View(empresas_descontadas)
View(indicadores_fundamentalistas)
View(indicadores_fundamentalistas2)
library(tidyverse)
library(ralger)
indicadores_acao <- function(cod_acao){
# obtendo tabela com dados fundamentalistas
dados_fundamentus <- table_scrap(paste0("https://www.fundamentus.com.br/detalhes.php?papel=",cod_acao),choose = 3)
# retirando colunas não necessárias, que tratam de oscilações do preço da ação
dados_fundamentus <- dados_fundamentus[,-c(1,2)]
# criando um dataframe novo com os dados organizados por indicadores e valores
dados_fundamentus2 <- data.frame(indicadores_fund = c(dados_fundamentus[,"Indicadores fundamentalistas"],
dados_fundamentus[,"Indicadores fundamentalistas.2"]),
valores = c(dados_fundamentus[,"Indicadores fundamentalistas.1"],
dados_fundamentus[,"Indicadores fundamentalistas.3"]))
# retirando "?" no começo de cada termo
dados_fundamentus2$indicadores_fund <- sub("^.", "", dados_fundamentus2$indicadores_fund)
# renomeando algumas colunas
dados_fundamentus2$indicadores_fund <- recode(dados_fundamentus2$indicadores_fund,
`Cres. Rec (5a)`= "Cres.Rec.Ultimos.5anos",
`EV / EBIT` = "EV_EBIT",
`Marg. EBIT` = "Marg.EBIT",
`Div. Yield` = "Div.Yield",
`Marg. Líquida` = "Marg.Liquida",
`Liquidez Corr` = "Liquidez.Corrente",
`EBIT / Ativo` = "EBIT_Ativo",
`Div Br/ Patrim` = "Div.Bruta_Patrimonio",
`P/Cap. Giro` = "P_Cap.Giro",
`Marg. Bruta` = "Margem.Bruta",
`Giro Ativos` = "Giro.Ativos",
`P/Ativ Circ Liq` = "P_Ativo.Circ.Liq",
`EV / EBITDA` = "EV_EBITDA")
# criando coluna com nome da ação e alterando a estrutura do banco de dados
dados_fundamentus2 <- dados_fundamentus2 %>%
mutate(Acao = cod_acao) %>%
spread(key = indicadores_fund, value = valores)
#dados_fundamentus2 <- dados_fundamentus2 %>% spread(key = indicadores_fund, value = valores)
return(dados_fundamentus2)
}
# vetor com ações listadas no ibovespa e no indice small caps
bovespa <- c("VALE3", "ITUB4","B3SA3","PETR4", "BBDC4", "PETR3","ABEV3",
"BBAS3","MGLU3", "ITSA4", "WEGE3", "JBSS3", "LREN3", "GNDI3",
"NTCO3", "SUZB3", "RENT3", "BBDC3", "EQTL3", "RADL3", "RAIL3",
"VVAR3", "LAME4", "BTOW3", "UGPA3","VIVT4", "SBSP3", "BBSE3",
"CCRO3", "BRFS3", "GGBR4", "BRDT3","BPAC11", "KLBN11","HAPV3",
"HYPE3", "SULA11", "COGN3","ENGI11", "TIMP3", "ELET3", "CSAN3",
"PCAR3", "EGIE3","CMIG4", "SANB11", "YDUQ3", "TOTS3", "BRML3",
"IRBR3", "ELET6", "QUAL3","BRAP4", "CRFB3", "FLRY3","CSNA3",
"CYRE3", "AZUL4", "BRKM5", "TAEE11", "EMBR3","MULT3","MRVE3",
"CIEL3", "ENBR3", "CPFE3", "MRFG3", "GOAU4", "USIM5", "BEEF3",
"IGTA3", "CVCB3", "GOLL4","ECOR3", "HGTX3","AALR3","ABCB4","ALSO3",
"ALUP11","AMAR3","ANIM3", "ARZZ3","BIDI11","BIDI4", "BKBR3","BMGB4",
"BPAN4","BRPR3", "BRSR6","CAML3","CEAB3","CESP6","CNTO3","CSMG3",
"DIRR3","DMMO3","DTEX3","ENAT3","ENEV3","EVEN3","EZTC3","GFSA3",
"GRND3","GUAR3", "HBOR3", "JHSF3","LCAM3","LEVE3","LIGT3","LINX3",
"LOGG3","LOGN3","LPSB3","LWSA3", "MDIA3","MEAL3","MILS3", "MOVI3",
"MYPK3","ODPV3","OMGE3","PARD3","POMO4","POSI3","PRIO3","RAPT4","RLOG3" ,
"SAPR11","SAPR4","SEER3", "SIMH3","SLCE3","SMLS3","SMTO3","SQIA3",
"STBP3","TASA4","TCSA3","TEND3","TGMA3","TIET11","TRIS3","TUPY3",
"VIVA3", "VLID3","VULC3","WIZS3"
)
# bovespa <- c("ADHM3", "AERI3","TIET3", "TIET11",
#              "TIET4","AFLT3","RPAD3",
#              "ALPK3","APER1","APER3","AVLL3",
#              "ALUP4","ALUP3",
#              "ABEV3","AMBP3","CBEE3","CANT3","CANT4",
#              "ANIM3","ARZZ3",
#              "ATMP3","ATOM3","AZEV4","AZEV3",
#              "AZUL4","BTOW3", "B3SA3",
#              "BPAC3","BPAC9", "BIDI11",
#              "BIDI4","BIDI3","BPAN4",
#              "SANB3","SANB4","SANB11","BEES3","BEES4","BDLL3", "BDLL4",
#              "BTTL3","BALM3","BALM4","BBML3","BBSE3","ABCB4","ABCB2",
#              "BRIV4","BRIV3", "BAZA3","BBDC3","BBDC4",
#              "BBAS11","BBAS3","BPAR3","BRSR5","BRSR3","BRSR6",
#              "BGIP4","BGIP3","FNCN3","BMEB4","BMEB3","BMIN3","BMIN4",
#              "BNBR3",
#              "BMKS3", "BIOM3", "BIOM11", "BIOM1",
#              "BIOM9", "BSEV3","BKBR3", "BOAS3", "BOBR4","BOBR3",
#              "BRML3", "BRPR3", "BCIA12",
#              "BRAP4","BRAP3","BBRK3", "AGRO3","BRKM6","BRKM5",
#              "BRKM3","BSLI3","BSLI4", "BRFS3",
#              "BRQB3", "CEAB3", "CAMB4", "CAMB3",
#              "CAML3","CRFB3","CCRO3",
#              "CCXC3",  "MAPT3","MAPT4", "ELET11", "ELET1", "ELET3",
#              "ELET5", "ELET6","CLSC4", "CLSC3","AALR3",
#              "CESP3", "CESP6",
#              "CESP5", "PCAR3","PCAR4","CASN1","CASN2","CASN3",
#              "CASN4","CEGR3", "CEEB6", "CEEB5", "CEEB3", "CEBR3",
#              "CEBR5", "CEBR6", "COCE3", "COCE5", "COCE6", "CMIG3",
#              "CMIG4", "CEPE3", "CEPE6", "CEPE5", "CSRN3", "CSRN5",
#              "CSRN6", "CEED4", "CEED3", "CEED1",  "FESA3", "FESA4",
#              "CEDO3", "CEDO4", "PTGY6L", "CGAS5", "CGAS3", "HBTS6",
#              "HBTS3", "HBTS5", "HGTX3", "CATA3",  "CATA4",
#              "LCAM3", "MSPA4", "MSPA3", "CPLE5", "CPLE6",  "CPLE3",
#              "PEAB4",  "PEAB3", "SAPR3", "SAPR4", "SAPR11", "CSMG3",
#              "CSAB3","CSAB4", "CSNA3", "CTNM3", "CTNM4", "CTSA8",
#              "CTSA3", "CTSA4","TRPL4", "TRPL3", "CIAG6L", "CIEL3",
#              "CMSA4",  "CMSA3", "CNSY3", "COGN3", "GPAR3", "GPAR1",
#              "SBSP3", "EEEL4", "EEEL3", "CRTE5B","CRTE3B", "ODER4",
#              "ODER3", "BRGE12", "BRGE11", "BRGE7", "BRGE3", "BRGE6",
#              "BRGE8", "BRGE5", "CALI4", "CALI3", "TEND3","CORR3", "CORR4",
#              "RLOG3", "CSAN3", "CPFE3", "CPRE3L", "CPRE3", "CRDE3", "CARD3",
#              "CTCA3", "CRMR6L", "CRMR5L","CURY3", "CVCB9","CVCB3","CVCB11",
#              "CVCB1", "CYRE3","CCPR3","DMVF3","DASA1","DASA3","PNVL4",
#              "PNVL3", "DIRR3","DOHL4", "CRVD5L","DTCY4","DTCY3",
#              "DTEX3","ECOR3","ENBR3","EALT4","EALT3",
#              "ELEK3","ELEK4", "EKTR4","EKTR3","LIPR3","ELPL3","EMAE4",
#              "EMAE3","EMBR3", "PGMN3","ECPR4","ECPR3", "ENAT3","ENMT2",
#              "ENMT1","ENMT3", "ENMT4", "ENGI3","ENGI4","ENGI12",
#              "ENEV3","EGIE3", "ENJU3","EQPA5","EQPA7","EQPA6",
#              "EQPA3","EQTL3","CELP7", "CELP3","CELP5", "CELP6",
#              "ETER1", "ETER9", "ETER3","EUCA4", "EUCA3", "EVEN3",
#              "BAUH3","BAUH4", "EZTC3", "VSPT3", "VSPT4","VSPT1",
#              "FHER3","FMSA6L", "BCFF12", "BRAS5L",
#              "CRIV3","CRIV4","FLRY3", "FLEX3", "FJTA3","FJTA4",
#              "FRAS3","GFSA11", "GFSA12","GFSA3","GFSA9","GFSA1",
#              "GSHP3", "GGBR4", "GGBR3", "GOLL12", "GOLL4",
#              "GOLL11", "GPCP4", "GPCP3", "CGRA4","CGRA3",
#              "GRND3","SOMA3", "GMAT3", "CNTO3",  "GSOM3",
#              "GUAR3","HAGA4", "HAGA3","HAPV3", "HBOR3",
#              "HETA3", "HETA4", "HBSA3","HOOT4","HOOT3",
#              "HYPE3",  "IGBR3", "IGSN3", "IGTA3",
#              "JBDU3", "JBDU4", "INEP4","INEP3","PARD3",
#              "INNT3","GNDI3","MEAL3", "FIGE3","FIGE4",
#              "MYPK3","RANI4","RANI3","IRBR9","IRBR3",
#              "IRBR1", "ITUB4", "ITUB3", "ITSA4","ITSA3",
#              "JBSS3","JPSA3", "JHSF3", "JFEN3",
#              "JOPA3", "JOPA4","JSLG3","JSLG11", "CTKA3",
#              "CTKA4", "KEPL3", "KEPL11","KLBN4", "KLBN3","KLBN11",
#              "LAVV3", "LMED3", "LIGT3","LINX3","LIQO1","LIQO3",
#              "RENT3","LWSA3", "LOGG3", "LOGN3","LAME9", "LAME10",
#              "LAME4","LAME3", "LAME2","LAME1","AMAR3", "LJQQ3",
#              "LREN3", "LPSB3", "LUPA3","LUPA11", "MDIA3","MSRO3",
#              "MGLU3", "LEVE3", "MGEL4", "MGEL3","ESTR4",
#              "ESTR3","POMO4",  "POMO3", "MRFG3","CASH3", "MELK3",
#              "MEND5", "MEND6",  "MEND3","MERC4", "MERC3","FRIO3",
#              "MTIG4", "MTIG3", "GOAU3", "GOAU4","RSUL3", "RSUL4",
#              "MTSA3","MTSA4", "MILS3","MMAQ3","MMAQ4",
#              "BEEF11", "BEEF3", "MNPR3", "MTRE", "MTRE3", "MMXM11",
#              "MMXM3", "MOAR3", "MDNE3","MOVI3", "MRVE3", "MULT3",
#              "MNDL3","NAFG4","NAFG3","NTCO1", "NTCO9", "NTCO3",
#              "NEOE3", "NGRD3", "NORD3", "NRTQ3", "NUTR3", "ODPV3",
#              "DMMO1",  "DMMO3", "DMMO11", "OIBR4", "OIBR3", "OMGE3",
#              "OSXB3",  "OFSA3", "PDTC3", "PATI4", "PATI9", "PATI3",
#              "PATI10", "PMAM3", "PTBL3", "PDGR3","PETZ3","PRIO3",
#              "BRDT3", "PETR3","PETR4","PTNT4","PTNT3", "PLPL3",
#              "PLAS3", "PLAS11","PPAR3", "FRTA3","PSSA3","PSVM11",
#              "POSI3", "PTCA11", "PTCA3", "PRNR3","PFRM3","QUAL3",
#              "QUSW3", "RADL3", "RAPT3","RAPT4", "RCSL4", "RCSL3",
#              "RDOR3", "REDE3","REDE1", "RPMG3","RNEW4", "RNEW3",
#              "LLIS3","GEPA4","GEPA3", "RDNI3","RSID3","RAIL3",
#              "SNSY3", "SNSY6", "SNSY5", "STBP3", "SCAR3", "SMTO3",
#              "ALPA4", "ALPA3", "AHEB13", "AHEB5", "AHEB1",
#              "AHEB6", "AHEB11",  "AHEB3", "SLED11", "SLED13",
#              "SLED4", "SLED1","SLED3","SLED2","SLED12","PSEG4",
#              "PSEG3", "SHUL4","SHUL3","SEQL3", "SEER3","APTI4",
#              "APTI3",  "SIMH3", "SQIA3","SLCE3", "SMFT6", "SMFT13",
#              "SMFT3", "SMLS3", "ALSO3", "SOND6", "SOND3", "SOND5",
#              "SPRI5", "SPRI6", "SPRI3", "SGPS3", "STTR3", "STKF3",
#              "SULA3", "SULA4", "NEMO6","NEMO3", "NEMO5", "SUZB3",
#              "SHOW3", "TASA13","TASA4", "TASA3", "TASA17", "TASA15",
#              "TAUR", "TAUR4", "TECN3", "TCSA3",  "TCNO3","TCNO4", "TGMA3",
#              "TEKA4", "TEKA3", "TKNO3", "TKNO4", "TELB3", "TELB2",
#              "TELB1", "TELB4","VIVT3", "VIVT4","TESA3", "TESA12",
#              "IPNN3",  "TXRX3", "TXRX4", "TIMS3", "TIMP3",
#              "TOTS3", "TPIS3", "TFCO4", "TCOF4", "TAEE4",
#              "TAEE3", "LUXM3", "LUXM4", "TRIS3", "CRPG6", "CRPG5",
#              "CRPG3", "TUPY3",  "UGPA3","UCAS3", "UNIP5", "UNIP6",
#              "UNIP3", "UPKP3B", "USIM6","USIM3", "USIM5", "VALE3",
#              "VLID3", "VVAR3", "VIVA3", "VIVR3","VIVR1", "VULC3",
#              "WEGE3", "MWET4", "MWET3", "WHRL4", "WHRL3", "WIZS3",
#              "WLMM4", "WLMM3","YDUQ3","RRRP3"
# )
# aplicando loop para obter os indicadores das ações armazenados em um só dataframe
indicadores_fundamentalistas <- do.call(rbind.data.frame,lapply(bovespa, indicadores_acao))
# Transformando "-" em NA
indicadores_fundamentalistas[indicadores_fundamentalistas == "-"] <- NA
# retirando "%"
indicadores_fundamentalistas <- as.data.frame(sapply(indicadores_fundamentalistas,function(x) gsub("%","", as.character(x))))
# convertendo colunas em númericas
indicadores_fundamentalistas2 <- as.data.frame(sapply(indicadores_fundamentalistas,
function(x) as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "",
as.character(x))))))
)
View(indicadores_fundamentalistas2)
indicadores_fundamentalistas2 <- as.data.frame(sapply(indicadores_fundamentalistas[,-1],
function(x) as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "",
as.character(x))))))
)
View(indicadores_fundamentalistas)
as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "",indicadores_fundamentalistas[,-1]))))
indicadores_fundamentalistas[,-1]
gsub("\\.", "",indicadores_fundamentalistas[,-1])
(gsub(",", ".", gsub("\\.", "",indicadores_fundamentalistas[,-1]))
(gsub(",", ".", gsub("\\.", "",indicadores_fundamentalistas[,-1]))
(gsub(",", ".", gsub("\\.", "",indicadores_fundamentalistas[,-1]))
as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "",indicadores_fundamentalistas[,-1]))))
as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "",indicadores_fundamentalistas[,-1]))))
as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "",indicadores_fundamentalistas$ROE))))
colnames(indicadores_fundamentalistas2)
teste<- as.vector(colnames(indicadores_fundamentalistas[,-1]))
as.data.frame(sapply(indicadores_fundamentalistas,
function(teste)
as.numeric(as.numeric(gsub(",", ".",
gsub("\\.", "",
paste0(indicadores_fundamentalistas,teste))))))
)
paste0(indicadores_fundamentalistas,teste)
paste0(indicadores_fundamentalistas,"$",teste)
as.data.frame(sapply(indicadores_fundamentalistas,
function(teste)
as.numeric(as.numeric(gsub(",", ".",
gsub("\\.", "",
paste0(indicadores_fundamentalistas,"$",teste))))))
)
indicadores_fundamentalistas %>% select(-Acao)
as.numeric(as.numeric(str_replace(",", ".", str_replace("\\.", "",indicadores_fundamentalistas[,-1]))))
str_replace("\\.", "",indicadores_fundamentalistas[,-1])
View(indicadores_fundamentalistas2)
rm(indicadores_fundamentalistas2)
indicadores_fundamentalistas2 <- indicadores_fundamentalistas
# convertendo colunas em númericas
indicadores_fundamentalistas2[,-1] <- as.data.frame(sapply(indicadores_fundamentalistas2[,-1],
function(x) as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "",
as.character(x))))))
)
View(indicadores_fundamentalistas2)
str(indicadores_fundamentalistas2)
# convertendo colunas em númericas
indicadores_fundamentalistas[,-1] <- as.data.frame(sapply(indicadores_fundamentalistas[,-1],
function(x) as.numeric(as.numeric(gsub(",", ".", gsub("\\.", "",
as.character(x))))))
)
str(indicadores_fundamentalistas)
# procurando empresas cuja multiplicação do P/L pelo P/VP seja menor que 22,5
indicadores_fundamentalistas$descontadas <- ifelse(indicadores_fundamentalistas$`P/L`*indicadores_fundamentalistas$`P/VP` <= 22.5 &
indicadores_fundamentalistas$`P/L`*indicadores_fundamentalistas$`P/VP` > 0, 1, 0)
empresas_descontadas <- indicadores_fundamentalistas %>% filter(descontadas == 1)
View(empresas_descontadas)
empresas_descontadas %>% filter(ROE > 10)
empresas_descontadas %>% filter(ROE > 10 & Cres.Rec.Ultimos.5anos > 0 & Div.Bruta_Patrimonio <= 1.5)
empresas_descontadas <- empresas_descontadas %>% filter(ROE > 10 & Cres.Rec.Ultimos.5anos > 0 & Div.Bruta_Patrimonio <= 1.5)
View(empresas_descontadas)
# brincando com os indicadores
empresas_descontadas <- empresas_descontadas %>% filter(ROE > 10 & Cres.Rec.Ultimos.5anos > 0 &  0 < Div.Bruta_Patrimonio <= 1.5)
# brincando com os indicadores
empresas_descontadas <- empresas_descontadas %>% filter(ROE > 10 &
Cres.Rec.Ultimos.5anos > 0 &
Div.Bruta_Patrimonio <= 1.5 &
Div.Bruta_Patrimonio > 0)
View(empresas_descontadas)
import pandas_datareader as wb
reticulate::repl_python()
import pandas as pd
import pandas as pd
import pandas as pd
import pandas as pd
library(reticulate)
reticulate::repl_python()
import pandas as pd
py_install("pandas")
quit
py_install("pandas")
reticulate::repl_python()
import pandas as pd
quit
py_install("pandas_datareader")
py_install("pandas-datareader")
reticulate::repl_python()
from pandas_datareader import data as wb
import numpy as np
import matplotlib
import random
import statsmodels
quit
py_install("matplotlib")
reticulate::repl_python()
import pandas_datareader
quit
conda_list()
py_install("urlencode")
py_install("urllib.parse")
reticulate::repl_python()
import pandas_datareader
import pandas-datareader
import pandas_datareader
from urllib.parse import urlencode
import pandas_datareader
pip install pandas-datareader --upgrade
reticulate::repl_python()
import pandas as pd
import matplotlib
quit
library(reticulate)
reticulate::repl_python()
import random
import statsmodels
import numpy
import math
from pandas_datareader import data as wb
indices_list = ["^BVSP","^GSPC","^GDAXI","^IXIC"]
indices_df = pd.DataFrame()
indices_list
ysetwd("C:\\Users\\pc\\Desktop\\page")
library(blogdown)
library(tidyverse)
blogdown::new_site(theme = "bjacquemet/personal-web", theme_example = TRUE)# en theme se debe colocar el nombre de la plantilla de hugo elegida
blogdown::install_hugo()
blogdown::new_site(theme = "bjacquemet/personal-web", theme_example = TRUE)# en theme se debe colocar el nombre de la plantilla de hugo elegida
blogdown::install_hugo()
blogdown::new_site(theme = "bjacquemet/personal-web", theme_example = TRUE)# en theme se debe colocar el nombre de la plantilla de hugo elegida
setwd("C:\\Users\\pc\\Desktop\\page")
blogdown::new_site(theme = "bjacquemet/personal-web", theme_example = TRUE)# en theme se debe colocar el nombre de la plantilla de hugo elegida
blogdown::serve_site()
blogdown::serve_site()
blogdown::new_site(theme = "bjacquemet/personal-web", theme_example = TRUE)# en theme se debe colocar el nombre de la plantilla de hugo elegida
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
